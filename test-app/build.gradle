buildscript {
    ext.kotlin_version = '1.5.31'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id "org.jetbrains.kotlin.plugin.spring" version "$kotlin_version"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'kotlin'

group 'com.worldremit.base'
version '1.0-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

ext {
    kotlin_coroutines_version = '1.5.2'
    spring_cloud_version = "2020.0.3"
    arrow_version = '1.0.1'
    kotest_version = '4.6.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${spring_cloud_version}"
    }
}

dependencies {
    implementation project(":tracing")
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation('org.springframework.boot:spring-boot-starter-webflux') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

    // Logging
    implementation 'io.github.microutils:kotlin-logging:1.7.6'
    implementation "ch.qos.logback:logback-core:1.2.3"
    implementation "ch.qos.logback:logback-classic:1.2.3"
    implementation "net.logstash.logback:logstash-logback-encoder:6.3"
    implementation "org.codehaus.janino:janino"
    implementation "org.slf4j:slf4j-api:1.7.25"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j:$kotlin_coroutines_version"

    // Arrow
    implementation "io.arrow-kt:arrow-core:$arrow_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation "org.apache.commons:commons-text:1.9"

    // Guava
    implementation "com.google.guava:guava:30.1.1-jre"

    // Metrics
    implementation 'io.micrometer:micrometer-registry-jmx'

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    // Tests
    testImplementation "org.springframework.cloud:spring-cloud-starter-contract-stub-runner"
    testImplementation "org.junit.jupiter:junit-jupiter:5.7.1"
    testImplementation "io.mockk:mockk:1.10.0"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "org.awaitility:awaitility:4.0.3"
    testImplementation "org.awaitility:awaitility-kotlin:4.0.3"
    testImplementation "org.reflections:reflections:0.9.12"
    testImplementation "org.assertj:assertj-core:3.19.0"
    testImplementation "org.springframework.cloud:spring-cloud-stream-test-support"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest.extensions:kotest-assertions-arrow:1.0.3"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
        languageVersion = "1.4"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}
