import org.gradle.api.tasks.testing.logging.TestExceptionFormat

plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlinx.kover'
}

group 'com.worldremit.base'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"

    implementation "io.arrow-kt:arrow-core:1.0.1"

    implementation 'io.zipkin.brave:brave:5.13.3'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.5.2"

    implementation 'io.github.microutils:kotlin-logging:2.0.11'
    implementation 'org.apache.commons:commons-lang3:3.12.0'

    testImplementation "io.kotest:kotest-runner-junit5:4.6.3"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'io.mockk:mockk:1.12.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
        languageVersion = "1.4"
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

tasks.test {
    kover {
        enabled = true
        includes = ['com\\.worldremit\\..*']
    }
}

tasks.koverHtmlReport {
    enabled = true                          // false to disable report generation
}

tasks.koverXmlReport {
    enabled = true                          // false to disable report generation
}

test {
    useJUnitPlatform {
        includeEngines 'kotest', 'junit-jupiter'
    }
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat TestExceptionFormat.FULL
        showExceptions true
        showCauses true
        showStackTraces true
    }
}

kover {
    enabled = true                          // false to disable instrumentation of all test tasks in all modules
    coverageEngine.set(kotlinx.kover.api.CoverageEngine.INTELLIJ) // change instrumentation agent and reporter
    generateReportOnCheck.set(true)         // false to do not execute `koverReport` task before `check` task
}

